version: '3.8'

services:
  airflow-webserver:
    image: apache/airflow:2.9.0
    restart: always
    env_file: .env
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    command: webserver
    depends_on:
      - airflow-scheduler

  airflow-scheduler:
    image: apache/airflow:2.9.0
    restart: always
    env_file: .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    command: scheduler

  airflow-triggerer:
    image: apache/airflow:2.9.0
    restart: always
    env_file: .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    command: triggerer

  airflow-worker:
    image: apache/airflow:2.9.0
    restart: always
    env_file: .env
    hostname: worker-1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    command: celery worker
    depends_on:
      - airflow-scheduler

  flower:
    image: apache/airflow:2.9.0
    restart: always
    env_file: .env
    ports:
      - "5555:5555"
    command: celery flower

  airflow-init:
    image: apache/airflow:2.9.0
    env_file: .env
    entrypoint: ""
    command: >
      bash -lc "
      airflow db init &&
      airflow users create
        --role Admin
        --username ${_AIRFLOW_WWW_USER_USERNAME}
        --password ${_AIRFLOW_WWW_USER_PASSWORD}
        --firstname ${_AIRFLOW_WWW_USER_FIRSTNAME}
        --lastname ${_AIRFLOW_WWW_USER_LASTNAME}
        --email ${_AIRFLOW_WWW_USER_EMAIL}
      "
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
